#!/usr/bin/env python3

import random
from tkinter import *
import pygame
from tkinter.font import *
from tkinter.messagebox import *

# -- GLOBAL VARIABLES -- #

roles = {"Loup Garou": True, "Loup Garou blanc": True, "Grand méchant loup": False, "Infect père des loups": True, "Loup amnésique": True, "Simple villageois": True, "Voyante": True, "Chasseur": True, "Cupidon": True, "Sorcière": True, "Petite fille": True, "Voleur": True, "Salvateur": True, "Idiot du village": True, "Bouc émissaire": True, "Ancien": True, "Joueur de flûte": True, "Corbeau": True, "Enfant sauvage": True, "Renard": True, "Soeur": True, "Montreur d'ours": True, "Chien loup": True, "Chevalier à l'épée rouillée": True, "Ange": True}

# ---------------------- #

class Game(object):

    player_list = []
    ingame_roles = []
    player_roles = {}
    game_info = {"Nuit": 1, "Couple": [], "Loups": [], "Enchantés": [], "Morts": [], "Maitre": "Personne", "Modèle": "Personne", "Protected": "Personne", "Soeurs": [], "Maire": "Personne", "RenardFlair": True, "AncienPower": True, "InfectPower": True, "SorcièrePotions": [True, True], "GMLPower": True}
    game_options = {"VoyanteBavarde":False, "VoyanteBavardePer":0, "Couple":"Couple classique", "Taux LGB":1, "TauxAssassin":1, "SorcièreNoKill":False, "SorcièreNoRaise":False, "JDFenchant":1, "WinAnge":1, "CompoCachée":False, "Election":True}

    fenetre = 0

    window = Tk()
    font_title = Font(root=window, family="Times", size=24, weight="bold", slant="italic")
    font_copyright = Font(root=window, family="Times", size=8, slant="italic")
    font_options = Font(root=window, family="Times", size=15, slant="italic")
    font_desc = Font(root=window, family="data/font/werewolf.ttf", size=15)

    def __init__(self):
        self.window.title("Loup Garou 1.0")
        self.window.geometry("1200x800+150+150")
        self.window.resizable(0, 0)

        self.main_menu()

        self.window.mainloop()

    def main_menu(self):
        for c in self.window.winfo_children():
            c.destroy()
        if (len(self.player_list) != 0):
            self.player_list.clear()

        title = Label(self.window, text="Loup Garou", font=self.font_title, fg="red")
        launch = Button(self.window, text="Jouer", command=self.play_menu)
        options = Button(self.window, text="Options", command=self.options_menu)
        leave = Button(self.window, text="Quitter", command=self.window.destroy)
        cpyright = Label(self.window, text="© 2019 Cyril Grosjean", font=self.font_copyright, fg="grey")

        title.place(x=520, y=10)
        launch.place(x=420, y=200, width=400, height=40)
        options.place(x=420, y=300, width=400, height=40)
        leave.place(x=420, y=400, width=400, height=40)
        cpyright.place(x=5, y=780)

    def play_menu(self):
        for c in self.window.winfo_children():
            c.destroy()

        title = Label(self.window, text="Loup Garou", font=self.font_title, fg="red")
        self.player_entry = Entry(self.window)
        self.player_entry.bind("<Return>", self.add_player)
        add_player_button = Button(self.window, text="Ajouter ce joueur", command=self.add_player)
        rem_player_button = Button(self.window, text="Supprimer ce joueur", command=self.del_player)
        self.wolves_var = StringVar()
        self.wolves_var.set(1)
        wolves_spin = Spinbox(self.window, textvariable=self.wolves_var, from_=1, to=8)
        wolves_label = Label(self.window, text="Nombre de loups")
        launch_button = Button(self.window, text="Commencer", command=self.start_game)
        back = Button(self.window, text="Retour", command=self.main_menu)
        self.liste = Listbox(self.window)

        title.place(x=520, y=10)
        self.liste.place(x=50, y=250)
        self.player_entry.place(x=490, y=100, width=200, height=30)
        add_player_button.place(x=490, y=150, width=200, height=40)
        rem_player_button.place(x=490, y=200, width=200, height=40)
        launch_button.place(x=490, y=400, width=200, height=40)
        wolves_label.place(x=830, y=170)
        wolves_spin.place(x=800, y=200)
        back.place(x=490, y=450, width=200, height=40)

    def start_game(self):
        global roles

        # - Variables

        nb_wolf = int(self.wolves_var.get())
        roles_lg = []
        roles_vi = []
        liste_joueurs = self.player_list.copy()
        liste_joueurs2 = self.player_list.copy()
        self.player_list = []

        # Checking players

        if len(liste_joueurs) < 5 or int(self.wolves_var.get()) > 8 or int(self.wolves_var.get()) < 1:
            showinfo("Loup Garou", "Il faut au moins 6 joueurs pour démarrer une partie.")
            self.play_menu()
            return None

        # - Copy roles

        for r in roles.keys():
            if roles.get(r):
                if "loup" in r or "Loup" in r:
                    if r != "Chien loup" and r != "Loup amnésique":
                        roles_lg.append(r)
                    else:
                        roles_vi.append(r)
                else:
                    roles_vi.append(r)
            elif self.game_options.get("CompoCachée"):
                self.ingame_roles.append(r)

        if len(roles_lg) < nb_wolf:
            while len(roles_lg) < nb_wolf:
                roles_lg.append("Loup Garou")
        if len(roles_vi) < len(liste_joueurs) - nb_wolf:
            while len(roles_vi) < len(liste_joueurs) - nb_wolf:
                roles_vi.append("Simple villageois")

        # - Attribution des roles

        while len(liste_joueurs) > 0:
            player = random.choice(liste_joueurs)
            del liste_joueurs[liste_joueurs.index(player)]

            if nb_wolf > 0:
                role = random.choice(roles_lg)
                del roles_lg[roles_lg.index(role)]
                self.player_roles[player] = role
                self.game_info["Loups"].append(player)
                self.ingame_roles.append(role)
                nb_wolf -= 1
            else:
                role = random.choice(roles_vi)
                del roles_vi[roles_vi.index(role)]
                if "Soeur" in role and len(liste_joueurs) > 0:
                    self.player_roles[player] = role
                    self.game_info["Soeurs"].append(player)
                    player = random.choice(liste_joueurs)

                    self.game_info["Soeurs"].append(player)
                    del liste_joueurs[liste_joueurs.index(player)]
                    self.player_roles[player] = role
                    self.ingame_roles.append(role)
                    self.ingame_roles.append(role)
                elif "Soeur" in role and len(liste_joueurs) == 0:
                    role = random.choice(roles_vi)
                    del roles_vi[roles_vi.index(role)]
                    self.player_roles[player] = role
                    self.ingame_roles.append(role)
                else:
                    self.player_roles[player] = role
                    self.ingame_roles.append(role)

        while len(liste_joueurs2) > 0:
            player = random.choice(liste_joueurs2)
            del liste_joueurs2[liste_joueurs2.index(player)]
            self.player_list.append(player)

        # - Starting...

        self.launch()

    def launch(self):
        for c in self.window.winfo_children():
            c.destroy()

        self.start = True
        self.player_select = StringVar()
        self.player_select.set("Personne")
        title = Label(self.window, text="Loup Garou", font=self.font_title, fg="red")
        self.text_info = Label(self.window, text="Merci de placer les joueurs de gauche à droite\nen fonction de l'ordre dont ils sont appelés pour les rôles.", font=self.font_desc)
        next_button = Button(self.window, text=">>", command=self.next)
        player_selected = OptionMenu(self.window, self.player_select, "Personne", *self.player_list)
        self.alive_players = Listbox(self.window)
        self.fill_listbox()

        title.place(x=520, y=10)
        self.text_info.place(x=340, y=200)
        player_selected.place(x=450, y=500, width=300, height=40)
        next_button.place(x=450, y=580, width=300, height=30)
        self.alive_players.place(x=50, y=200, width=260, height=300)

    def next(self):
        global roles
        if self.start:
            if self.fenetre < len(self.player_list):
                name = self.player_list[self.fenetre]
                role = self.player_roles.get(name)
                self.text_info.config(text="Joueur: " + str(name) + "\nRole: " + str(role))
                self.fenetre += 1
            else:
                self.text_info.config(text="Vérifiez que tous les joueurs soient installés...\nC'est parti !")
                self.start = False
                self.fenetre = 0
        else:
            if self.fenetre == 0:
                self.text_info.config(text="La nuit " + str(self.game_info.get("Nuit")) + " se lève !")
                self.fenetre += 1
            elif self.fenetre == 1:
                if "Voleur" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Voleur":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le voleur se réveille ! (" + str(player) + ")\n\nIl va voler le rôle d'un joueur pour le reste de la partie.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 2:
                if self.player_select.get() != "Personne":
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Voleur":
                            player = i
                            break
                    for i in range(0, len(self.player_list)):
                        name = self.alive_players.get(i)
                        nl = name.split(" - ")
                        if player == nl[0]:
                            self.alive_players.delete(i)
                        if self.player_select.get() == nl[0]:
                            self.alive_players.delete(i)
                    if self.player_select.get() in self.game_info.get("Loups"):
                        del self.game_info.get("Loups")[self.game_info.get("Loups").index(self.player_select.get())]
                        self.game_info.get("Loups").append(player)
                    self.player_roles[player] = self.player_roles.get(self.player_select.get())
                    self.player_roles[self.player_select.get()] = "Voleur"
                    self.alive_players.insert(END, str(self.player_select.get()) + " - Voleur")
                    self.alive_players.insert(END, str(player) + " - " + str(self.player_roles.get(player)))
                    self.player_select.set("Personne")
                self.text_info.config(text="Le voleur se rendort !")
                self.fenetre += 1
            elif self.fenetre == 3:
                if "Voyante" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Voyante":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="La voyante se réveille ! (" + str(player) + ")\n\nElle va regarder le rôle d'un joueur.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 4:
                if self.player_select.get() != "Personne":
                    if self.game_options.get("VoyanteBavarde"):
                        if random.randint(0, 100) <= self.game_options.get("VoyanteBavardePer"):
                            self.text_info.config(text="La voyante est bavarde !\nElle a espionné un joueur qui est " + str(self.player_roles.get(self.player_select.get())) + " !\n\nLa voyante se rendort !")
                        else:
                            self.text_info.config(text="La voyante n'est pas bavarde.\nElle a espionné un joueur qui est " + str(self.player_roles.get(self.player_select.get())) + " !\n\nLa voyante se rendort !")
                    else:
                        self.text_info.config(text="La voyante a espionné un joueur qui est " + str(self.player_roles.get(self.player_select.get())) + " !\n\nLa voyante se rendort !")
                    self.player_select.set("Personne")
                else:
                    self.text_info.config(text="La voyante se rendort !")
                self.fenetre += 1
            elif self.fenetre == 5:
                if "Renard" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Renard":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le renard se réveille ! (" + str(player) + ")\n\nIl va flairer un joueur.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 6:
                if self.player_select.get() != "Personne":
                    if self.player_select.get() in self.game_info.get("Loups"):
                        self.game_info["RenardFlair"] = False
                        self.text_info.config(text="Le renard perd son flair.\n\nLe renard se rendort !")
                    else:
                        self.text_info.config(text="Le renard garde son flair.\n\nLe renard se rendort !")
                    self.player_select.set("Personne")
                else:
                    self.text_info.config(text="Le renard garde son flair.\n\nLe renard se rendort !")
                self.fenetre += 1
            elif self.fenetre == 7:
                if "Cupidon" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Cupidon":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le cupidon se réveille ! (" + str(player) + ")\n\nIl va former un couple.")
                    self.fenetre += 1
                else:
                    self.fenetre += 4
                    self.next()
            elif self.fenetre == 8:
                if self.player_select.get() != "Personne":
                    self.game_info.get("Couple").append(self.player_select.get())
                    self.player_select.set("Personne")
                    self.text_info.config(text="Le deuxième membre du couple...")
                    self.fenetre += 1
                else:
                    self.fenetre += 3
                    self.next()
            elif self.fenetre == 9:
                if self.player_select.get() != "Personne":
                    self.game_info.get("Couple").append(self.player_select.get())
                    self.player_select.set("Personne")
                    self.text_info.config(text="Le cupidon se rendort !")
                    self.fenetre += 1
                else:
                    self.fenetre -= 1
                    self.next()
            elif self.fenetre == 10:
                self.text_info.config(text="Le couple se réveille ! (" + str(self.game_info.get("Couple")[0]) + " et " + str(self.game_info.get("Couple")[1]) + ")\n\nIls se regardent et se rendorment.")
                self.fenetre += 1
            elif self.fenetre == 11:
                if "Enfant sauvage" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Enfant sauvage":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="L'enfant sauvage se réveille ! (" + str(player) + ")\n\nIl va désigner un modèle si celui-ci vient à mourir,\nl'enfant sauvage sera alors un loup garou.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 12:
                if self.player_select.get() != "Personne":
                    self.game_info["Modèle"] = self.player_select.get()
                self.player_select.set("Personne")
                self.text_info.config(text="L'enfant sauvage se rendort !")
                self.fenetre += 1
            elif self.fenetre == 13:
                if "Chien loup" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Chien loup":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le chien loup se réveille ! (" + str(player) + ")\n\nIl désigne un maître pour cette nuit. Si le maître ne nourrit pas le chien,\nil sera transformé en loup garou.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 14:
                if self.player_select.get() != "Personne":
                    self.game_info["Maitre"] = self.player_select.get()
                self.player_select.set("Personne")
                self.text_info.config(text="Le chien loup s'endort !")
                self.fenetre += 1
            elif self.fenetre == 15:
                nb_enchants = int(self.game_options.get("JDFenchant"))
                if "Joueur de flûte" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Joueur de flûte":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le joueur de flûte se réveille ! (" + str(player) + ")\n\nIl va enchanter " + str(nb_enchants) + " personnes. S'il enchante tout le monde,\nil gagne la partie.")
                    self.fenetre += 1
                else:
                    self.fenetre += 6
                    self.next()
            elif self.fenetre == 16:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                    self.player_select.set("Personne")
                    if self.game_options.get("JDFenchant") > 1:
                        self.text_info.config(text="La deuxième personne à enchanter...")
                        self.fenetre += 1
                    else:
                        self.text_info.config(text="Le joueur de flûte se rendort !")
                        self.fenetre += 5
                else:
                    self.fenetre += 5
                    self.next()
            elif self.fenetre == 17:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                if self.game_options.get("JDFenchant") > 2:
                    self.text_info.config(text="La troisième personne à enchanter...")
                    self.fenetre += 1
                else:
                    self.text_info.config(text="Le joueur de flûte se rendort !")
                    self.fenetre += 4
            elif self.fenetre == 18:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                if self.game_options.get("JDFenchant") > 3:
                    self.text_info.config(text="La quatrième personne à enchanter...")
                    self.fenetre += 1
                else:
                    self.text_info.config(text="Le joueur de flûte se rendort !")
                    self.fenetre += 3
            elif self.fenetre == 19:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                if self.game_options.get("JDFenchant") > 4:
                    self.text_info.config(text="La cinquième personne à enchanter...")
                    self.fenetre += 1
                else:
                    self.text_info.config(text="Le joueur de flûte se rendort !")
                    self.fenetre += 2
            elif self.fenetre == 20:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="Le joueur de flûte se rendort !")
                self.fenetre += 1
            elif self.fenetre == 21:
                if "Joueur de flûte" in self.ingame_roles:
                    self.text_info.config(text="Les enchantés se réveillent...\n" + str(self.game_info.get("Enchantés")) + "\nIls regardent qui est enchanté puis se rendorment.")
                    self.fenetre += 1
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 22:
                if "Salvateur" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Salvateur":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le salvateur se réveille ! (" + str(player) + ")\n\nIl va choisir quelqu'un qu'il va protéger cette nuit !")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 23:
                if self.player_select.get() != "Personne":
                    self.game_info["Protected"] = self.player_select.get()
                self.player_select.set("Personne")
                self.text_info.config(text="Le salvateur se rendort...")
                self.fenetre += 1
            elif self.fenetre == 24:
                self.text_info.config(text="Les loups garous se réveillent... (" + str(self.game_info.get("Loups")) + ")\n\nIls choisissent une victime pour cette nuit !")
                self.fenetre += 1
            elif self.fenetre == 25:
                if self.player_select.get() == "Personne":
                    self.fenetre = 24
                    self.next()
                else:
                    if self.player_roles.get(self.player_select.get()) == "Ancien" and self.game_info.get("AncienPower"):
                        self.game_info["AncienPower"] = False
                    elif self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                    self.player_select.set("Personne")
                    self.text_info.config(text="Les loups garous se rendorment...")
                    self.fenetre += 1
            elif self.fenetre == 26:
                if "Infect père des loups" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Infect père des loups":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="L'infect père des loups se réveille ! (" + str(player) + ")\n\nIl décide alors si il souhaite ou non réssuciter la personne \nmorte pendant l'attaque des loups.\n\nMessage pour le M-J: Sélectionnez un joueur \ndans la liste pour réssuciter le mort.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 27:
                if self.player_select.get() != "Personne":
                    self.game_info["InfectPower"] = False
                    self.game_info["Loups"].append(self.game_info.get("Morts")[0])
                    del self.game_info.get("Morts")[0]
                self.player_select.set("Personne")
                self.text_info.config(text="L'infect père des loups se rendort...")
                self.fenetre += 1
            elif self.fenetre == 28:
                if "Grand méchant loup" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Grand méchant loup":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le grand méchant loup se réveille ! (" + str(player) + ")\n\nIl va désigner une seconde victime dans la nuit.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 29:
                if self.player_select.get() != "Personne":
                    if self.player_roles.get(self.player_select.get()) == "Ancien" and self.game_info.get("AncienPower"):
                        self.game_info["AncienPower"] = False
                    elif self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="Le grand méchant loup se rendort...")
                self.fenetre += 1
            elif self.fenetre == 30:
                if "Loup Garou blanc" in self.ingame_roles and self.game_info.get("Nuit") % self.game_options.get("Taux LGB") == 0:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Loup Garou blanc":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le loup garou blanc se réveille ! (" + str(player) + ")\n\nIl va tuer ou non un loup garou cette nuit.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 31:
                if self.player_select.get() != "Personne":
                    if self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="Le loup garou blanc se rendort...")
                self.fenetre += 1
            elif self.fenetre == 32:
                if "Assassin" in self.ingame_roles and self.game_info.get("Nuit") % self.game_options.get("TauxAssassin") == 0:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Assassin":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="L'assassin se réveille ! (" + str(player) + ")\n\nIl va tuer quelqu'un cette nuit !")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 33:
                if self.player_select.get() != "Personne":
                    if self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="L'assassin se rendort...")
                self.fenetre += 1
            elif self.fenetre == 34:
                if "Soeur" in self.ingame_roles:
                    self.text_info.config(text="Les soeurs se réveillent ! (" + str(self.game_info.get("Soeurs")) + ")\n\nElles se mettent d'accord pour le jour suivant et se rendorment.")
                    self.fenetre += 1
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 35:
                if "Sorcière" in self.ingame_roles and not self.game_options.get("SorcièreNoRaise"):
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Sorcière":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="La sorcière se réveille ! (" + str(player) + ")\n\nElle va sauver une personne si elle le souhaite (" + str(self.game_info.get("Morts")) + ").")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 36:
                if self.player_select.get() != "Personne":
                    self.game_info["SorcièrePotions"][0] = False
                    del self.game_info["Morts"][self.game_info["Morts"].index(self.player_select.get())]
                self.player_select.set("Personne")
                self.text_info.config("La sorcière se rendort (sauf si elle a sa potion de mort)...")
                self.fenetre += 1
            elif self.fenetre == 37:
                if "Sorcière" in self.ingame_roles and not self.game_options.get("SorcièreNoKill"):
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Sorcière":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="(La sorcière se réveille (" + str(player) + "))\n\nElle va tuer une personne si elle le souhaite.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 38:
                if self.player_select.get() != "Personne":
                    self.game_info["Morts"].append(self.player_select.get())
                    self.game_info["SorcièrePotions"][1] = False
                self.player_select.set("Personne")
                self.text_info.config(text="La sorcière se rendort !")
                self.fenetre += 1
            elif self.fenetre == 39:
                self.text_info.config(text="Le soleil se lève et voici la liste des morts.")
                self.fenetre += 1
                self.chasseur = False
            elif self.fenetre == 40:
                if self.chasseur:
                    self.chasseur = False
                    if self.player_select.get() != "Personne":
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                if len(self.game_info.get("Morts")) > 0:
                    self.kill_player()
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 41:
                self.check_win()
                self.fenetre += 1
                self.next()
            elif self.fenetre == 42:
                if "Chien loup" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Chien loup":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    if player not in self.game_info.get("Loups"):
                        self.text_info.config(text="Le chien loup a-t-il été nourri ?\n\nS'il n'est pas nourri, sélectionnez un joueur aléatoire.")
                        self.fenetre += 1
                    else:
                        self.fenetre += 2
                        self.next()
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 43:
                if self.player_select.get() == "Personne":
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Chien loup":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    if player != "Personne":
                        self.game_info["Loups"].append(player)
                    self.player_select.set("Personne")
                    self.text_info.config(text="Le chien n'a pas été nourri, il devient alors Loup Garou !")
                    self.game_info["Maitre"] = "LG"
                    self.fenetre += 1
                else:
                    self.game_info["Maitre"] = "Personne"
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 44:
                if self.game_info.get("Maire") == "Personne" and self.game_options.get("Election"):
                    self.text_info.config(text="Il faut élire un maire !")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 45:
                if self.player_select.get() != "Personne":
                    self.game_info["Maire"] = self.player_select.get()
                    self.text_info.config(text="Le maire est donc " + str(self.player_select.get()) + " !")
                    self.player_select.set("Personne")
                    self.fenetre += 1
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 46:
                self.text_info.config(text="C'est l'heure du vote ! Votez pour un joueur.")
                self.fenetre += 1
            elif self.fenetre == 47:
                if self.player_select.get() != "Personne":
                    if self.player_roles.get(self.player_select.get()) != "Idiot du village":
                        self.game_info["Morts"].append(self.player_select.get())
                    self.player_select.set("Personne")
                    self.fenetre += 1
                    self.next()
                else:
                    if "Bouc émissaire" in self.ingame_roles:
                        player = ""
                        for i in self.player_roles.keys():
                            if self.player_roles.get(i) == "Bouc émissaire":
                                player = i
                                self.game_info["Morts"].append(player)
                                self.text_info.config(text="Le village ne s'est pas mis d'accord lors du vote.\nLe bouc émissaire est donc tué !")
                                break
                        if player == "":
                            self.text_info.config(text="Le village ne s'est pas mis d'accord lors du vote.\nPersonne est mort !")
                    else:
                        self.text_info.config(text="Le village ne s'est pas mis d'accord lors du vote.\nPersonne est mort !")
                    self.fenetre += 1
            elif self.fenetre == 48:
                if self.chasseur:
                    self.chasseur = False
                    if self.player_select.get() != "Personne":
                        self.game_info["Morts"].append(self.player_select.get())
                        self.player_select.set("Personne")
                if len(self.game_info.get("Morts")) > 0:
                    self.kill_player()
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 49:
                self.game_info["Nuit"] += 1
                self.text_info.config(text="La nuit " + str(self.game_info.get("Nuit")) + " se lève !")
                self.fenetre += 1
            elif self.fenetre == 50:
                if "Voyante" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Voyante":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="La voyante se réveille ! (" + str(player) + ")\n\nElle va espionner un joueur cette nuit.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 51:
                if self.player_select.get() != "Personne":
                    if self.game_options.get("VoyanteBavarde"):
                        if random.randint(0, 100) <= self.game_options.get("VoyanteBavardePer"):
                            self.text_info.config(text="La voyante est bavarde !\nElle a espionné un joueur qui est " + str(self.player_roles.get(self.player_select.get())) + " !\n\nLa voyante se rendort !")
                        else:
                            self.text_info.config(text="La voyante n'est pas bavarde.\nElle a espionné un joueur qui est " + str(self.player_roles.get(self.player_select.get())) + " !\n\nLa voyante se rendort !")
                    else:
                        self.text_info.config(text="La voyante a espionné un joueur qui est " + str(self.player_roles.get(self.player_select.get())) + " !\n\nLa voyante se rendort !")
                    self.player_select.set("Personne")
                else:
                    self.text_info.config(text="La voyante se rendort !")
                self.fenetre += 1
            elif self.fenetre == 52:
                if "Renard" in self.ingame_roles and self.game_info.get("RenardFlair"):
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Renard":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le renard se réveille ! (" + str(player) + ")\n\nIl va flairer un joueur.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 53:
                if self.player_select.get() != "Personne":
                    if self.player_select.get() in self.game_info.get("Loups"):
                        self.game_info["RenardFlair"] = False
                        self.text_info.config(text="Le renard perd son flair.\n\nLe renard se rendort !")
                    else:
                        self.text_info.config(text="Le renard garde son flair.\n\nLe renard se rendort !")
                    self.player_select.set("Personne")
                else:
                    self.text_info.config(text="Le renard garde son flair.\n\nLe renard se rendort !")
                self.fenetre += 1
            elif self.fenetre == 54:
                if "Chien loup" in self.ingame_roles and self.game_info.get("Maitre") == "Personne":
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Chien loup":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 55:
                if self.player_select.get() != "Personne":
                    self.game_info["Maitre"] = self.player_select.get()
                self.player_select.set("Personne")
                self.text_info.config(text="Le chien loup s'endort !")
                self.fenetre += 1
            elif self.fenetre == 56:
                nb_enchants = int(self.game_options.get("JDFenchant"))
                if "Joueur de flûte" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Joueur de flûte":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le joueur de flûte se réveille ! (" + str(player) + ")\n\nIl va enchanter " + str(nb_enchants) + " personnes. S'il enchante tout le monde,\nil gagne la partie.")
                    self.fenetre += 1
                else:
                    self.fenetre += 6
                    self.next()
            elif self.fenetre == 57:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                    self.player_select.set("Personne")
                    if self.game_options.get("JDFenchant") > 1:
                        self.text_info.config(text="La deuxième personne à enchanter...")
                        self.fenetre += 1
                    else:
                        self.text_info.config(text="Le joueur de flûte se rendort !")
                        self.fenetre += 5
                else:
                    self.fenetre += 5
                    self.next()
            elif self.fenetre == 58:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                if self.game_options.get("JDFenchant") > 2:
                    self.text_info.config(text="La troisième personne à enchanter...")
                    self.fenetre += 1
                else:
                    self.text_info.config(text="Le joueur de flûte se rendort !")
                    self.fenetre += 4
            elif self.fenetre == 59:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                if self.game_options.get("JDFenchant") > 3:
                    self.text_info.config(text="La quatrième personne à enchanter...")
                    self.fenetre += 1
                else:
                    self.text_info.config(text="Le joueur de flûte se rendort !")
                    self.fenetre += 3
            elif self.fenetre == 60:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                if self.game_options.get("JDFenchant") > 4:
                    self.text_info.config(text="La cinquième personne à enchanter...")
                    self.fenetre += 1
                else:
                    self.text_info.config(text="Le joueur de flûte se rendort !")
                    self.fenetre += 2
            elif self.fenetre == 61:
                if self.player_select.get() != "Personne":
                    self.game_info["Enchantés"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="Le joueur de flûte se rendort !")
                self.fenetre += 1
            elif self.fenetre == 62:
                if "Joueur de flûte" in self.ingame_roles:
                    self.text_info.config(text="Les enchantés se réveillent ! (" + str(self.game_info.get("Enchantés")) + ")\n\nIls se regardent et se rendorment !")
                    self.fenetre += 1
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 63:
                if "Salvateur" in self.ingame_roles:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Salvateur":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le salvateur se réveille ! (" + str(player) + ")\n\nIl va protéger quelqu'un cette nuit.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 64:
                if self.player_select.get() != "Personne":
                    self.game_info["Protected"] = self.player_select.get()
                self.player_select.set("Personne")
                self.text_info.config(text="Le salvateur se rendort...")
                self.fenetre += 1
            elif self.fenetre == 65:
                self.text_info.config(text="Les loups garous se réveillent ! (" + str(self.game_info.get("Loups")) + ")\n\nIls désignent une victime pour cette nuit !")
                self.fenetre += 1
            elif self.fenetre == 66:
                if self.player_select.get() == "Personne":
                    self.fenetre = 65
                    self.next()
                else:
                    if self.player_roles.get(self.player_select.get()) == "Ancien" and self.game_info.get("AncienPower"):
                        self.game_info["AncienPower"] = False
                    elif self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                    self.player_select.set("Personne")
                    self.text_info.config(text="Les loups garous se rendorment...")
                    self.fenetre += 1
            elif self.fenetre == 67:
                if "Infect père des loups" in self.ingame_roles and self.game_info.get("InfectPower"):
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Infect père des loups":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="L'infect père des loups se réveille ! (" + str(player) + ")\n\nIl décide alors si il souhaite ou non réssuciter la personne \nmorte pendant l'attaque des loups.\n\nMessage pour le M-J: Sélectionnez un joueur \ndans la liste pour réssuciter le mort.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 68:
                if self.player_select.get() != "Personne":
                    self.game_info["InfectPower"] = False
                    self.game_info["Loups"].append(self.game_info.get("Morts")[0])
                    del self.game_info.get("Morts")[0]
                    self.player_select.set("Personne")
                    self.text_info.config(text="L'infect père des loups se rendort...")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 69:
                if "Grand méchant loup" in self.ingame_roles and self.game_info.get("GMLPower"):
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Grand méchant loup":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le grand méchant loup se réveille ! (" + str(player) + ")\n\nIl va désigner une seconde victime dans la nuit.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 70:
                if self.player_select.get() != "Personne":
                    if self.player_roles.get(self.player_select.get()) == "Ancien" and self.game_info.get("AncienPower"):
                        self.game_info["AncienPower"] = False
                    elif self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="Le grand méchant loup se rendort...")
                self.fenetre += 1
            elif self.fenetre == 71:
                if "Loup Garou blanc" in self.ingame_roles and self.game_info.get("Nuit") % self.game_options.get("Taux LGB") == 0:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Loup Garou blanc":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="Le loup garou blanc se réveille ! (" + str(player) + ")\n\nIl va tuer ou non un loup garou cette nuit.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 72:
                if self.player_select.get() != "Personne":
                    if self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="Le loup garou blanc se rendort...")
                self.fenetre += 1
            elif self.fenetre == 73:
                if "Assassin" in self.ingame_roles and self.game_info.get("Nuit") % self.game_options.get("TauxAssassin") == 0:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Assassin":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="L'assassin se réveille ! (" + str(player) + ")\n\nIl va tuer quelqu'un cette nuit !")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 74:
                if self.player_select.get() != "Personne":
                    if self.game_info.get("Protected") != self.player_select.get():
                        self.game_info["Morts"].append(self.player_select.get())
                self.player_select.set("Personne")
                self.text_info.config(text="L'assassin se rendort...")
                self.fenetre += 1
            elif self.fenetre == 75:
                if "Soeur" in self.ingame_roles:
                    self.text_info.config(text="Les soeurs se réveillent ! (" + str(self.game_info.get("Soeurs")) + ")\n\nElles se mettent d'accord pour le jour suivant et se rendorment.")
                    self.fenetre += 1
                else:
                    self.fenetre += 1
                    self.next()
            elif self.fenetre == 76:
                if "Sorcière" in self.ingame_roles and self.game_info.get("SorcièrePotions")[0]:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Sorcière":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="La sorcière se réveille ! (" + str(player) + ")\n\nElle va sauver une personne si elle le souhaite (" + str(self.game_info.get("Morts")) + ").")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 77:
                if self.player_select.get() != "Personne":
                    self.game_info["SorcièrePotions"][0] = False
                    del self.game_info["Morts"][self.game_info["Morts"].index(self.player_select.get())]
                self.player_select.set("Personne")
                self.text_info.config("La sorcière se rendort (sauf si elle a sa potion de mort)...")
                self.fenetre += 1
            elif self.fenetre == 78:
                if "Sorcière" in self.ingame_roles and self.game_info.get("SorcièrePotions")[1]:
                    player = ""
                    for i in self.player_roles.keys():
                        if self.player_roles.get(i) == "Sorcière":
                            player = i
                            break
                    if player == "":
                        player = "Personne"
                    self.text_info.config(text="(La sorcière se réveille (" + str(player) + "))\n\nElle va tuer une personne si elle le souhaite.")
                    self.fenetre += 1
                else:
                    self.fenetre += 2
                    self.next()
            elif self.fenetre == 79:
                if self.player_select.get() != "Personne":
                    self.game_info["Morts"].append(self.player_select.get())
                    self.game_info["SorcièrePotions"][1] = False
                self.player_select.set("Personne")
                self.text_info.config(text="La sorcière se rendort !")
                self.fenetre = 39
            elif self.fenetre == 80:
                self.fenetre = 39
                self.next()

    def check_win(self):
        if len(self.game_info.get("Loups")) == 0:
            self.text_info.config(text="Les villageois ont gagné !")
        if len(self.player_list) == len(self.game_info.get("Loups")):
            self.text_info.config(text="Les loups garous ont gagné !")
        if len(self.player_list) == 1 and self.player_roles.get(self.player_list[0]) == "Assassin":
            self.text_info.config(text="L'assassin a gagné !")
        if len(self.player_list) == 1 and self.player_roles.get(self.player_list[0]) == "Loup Garou blanc":
            self.text_info.config(text="Le loup garou blanc a gagné !")
        if len(self.player_list) == 2:
            if len(self.game_info.get("Couple")) == 2:
                self.text_info.config(text="Le couple a gagné !")
            if self.player_list[0] in self.game_info.get("Loups") and self.player_list[1] not in self.game_info.get("Loups"):
                self.text_info.config(text="Les loups garous ont gagné !")
            elif self.player_list[1] in self.game_info.get("Loups") and self.player_list[0] not in self.game_info.get("Loups"):
                self.text_info.config(text="Les loups garous ont gagné !")
        if len(self.player_list) == 3:
            if len(self.game_info.get("Couple")) == 2:
                if "Cupidon" in self.ingame_roles:
                    if self.player_roles.get(self.game_info.get("Couple")[0]) != "Cupidon" and self.player_roles.get(self.game_info.get("Couple")[1]) != "Cupidon":
                        self.text_info.config(text="Le couple a gagné !")
        if len(self.player_list) == 0:
            self.text_info.config(text="Personne n'a gagné, tout le monde est mort !")

    def kill_player(self):
        player = self.game_info.get("Morts")[0]
        role = self.player_roles.get(player)
        text = player + " est mort, il était " + role + "."

        if player in self.game_info.get("Loups"):
            del self.game_info["Loups"][self.game_info["Loups"].index(player)]

        if player in self.game_info.get("Couple"):
            p2 = ""
            for i in self.game_info.get("Couple"):
                if i != player:
                    p2 = i
            text += "\nDans un élan de chagrin, " + str(p2) + " meurt, amoureux de " + player
            self.game_info["Couple"] = []
            self.game_info["Morts"].append(p2)

        if player in self.game_info.get("Enchantés"):
            del self.game_info["Enchantés"][self.game_info["Enchantés"].index(player)]

        if player == self.game_info.get("Modèle"):
            p2 = ""
            for i in self.player_roles.keys():
                if self.player_roles.get(i) == "Enfant sauvage":
                    p2 = i
                    break
            self.game_info["Loups"].append(p2)

        if player in self.game_info.get("Soeurs"):
            del self.game_info["Soeurs"][self.game_info["Soeurs"].index(player)]

        if player in self.game_info.get("Maire"):
            self.game_info["Maire"] = "Personne"

        if role == "Chasseur":
            text += "\nAvant de mourir, il tire sur un joueur !"
            self.chasseur = True

        if role == "Joueur de flûte":
            self.game_info["Enchantés"] = []

        if role == "Chevalier à l'épée rouillée":
            index = self.player_list.index(player)
            dead = ""
            for i in range(index, len(self.player_list)):
                if self.player_list[i] in self.game_info.get("Loups"):
                    dead = self.player_list[i]
                    break
            if dead == "":
                for i in range(0, index):
                    if self.player_list[i] in self.game_info.get("Loups"):
                        dead = self.player_list[i]
                        break
            text += "\nLe chevalier tue le premier loup à sa gauche.\nC'est donc " + dead + " qui meurt !"
            self.game_info["Morts"].append(dead)

        self.text_info.config(text=str(text))

        del self.ingame_roles[self.ingame_roles.index(role)]
        del self.player_roles[player]
        del self.player_list[self.player_list.index(player)]
        del self.game_info["Morts"][0]
        for i in range(0, len(self.player_list)):
            name = self.alive_players.get(i)
            nl = name.split(" - ")
            if player == nl[0]:
                self.alive_players.delete(i)

    def fill_listbox(self):
        for i in self.player_list:
            name = str(i) + " - " + str(self.player_roles.get(i))
            self.alive_players.insert(END, name)

    def add_player(self, event=0):
        name = self.player_entry.get()
        if name not in " ":
            self.player_entry.delete(0, END)
            self.player_list.append(name)
            self.liste.insert(END, name)
        nb = len(self.player_list) // 4
        if (nb == 0):
            nb += 1
        self.wolves_var.set(str(nb))

    def del_player(self):
        select = self.liste.curselection()
        try:
            name = self.liste.get(select)
            del self.player_list[self.player_list.index(name)]
            self.liste.delete(select)
        except:
            pass
        nb = len(self.player_list) // 4
        if (nb == 0):
            nb += 1
        self.wolves_var.set(str(nb))

    def options_menu(self):
        global roles

        for c in self.window.winfo_children():
            c.destroy()

        compo_list = []
        for i in roles.keys():
            compo_list.append(i)
        del compo_list[compo_list.index("Simple villageois")]
        del compo_list[compo_list.index("Loup Garou")]
        title = Label(self.window, text="Loup Garou", font=self.font_title, fg="red")

        # - Activer / Désactiver rôles

        self.select_roles_var = StringVar()
        self.select_roles_var.set("Loup Garou blanc")
        select_roles = OptionMenu(self.window, self.select_roles_var, *compo_list, command=self.toggle_label_func)
        toggle_button = Button(self.window, text="Activer / Désactiver", command=self.toggle_role)
        self.toggle_label = Label(self.window, text="Activé", fg="green", font=self.font_options)

        # - Voyante bavarde ou non + chances de bavardage

        self.voy_bavarde_var = IntVar()
        self.voy_bavarde_var.set(0)
        voy_bavarde = Checkbutton(self.window, text="Voyante bavarde", variable=self.voy_bavarde_var)
        luck_bavar_label = Label(self.window, text="Chances de bavardage (en %)")
        self.luck_bavar = Spinbox(self.window, from_=0, to=100)

        # - Type de couple

        self.couple_var = StringVar()
        self.couple_var.set("Couple classique")
        couple = OptionMenu(self.window, self.couple_var, "Couple classique", "Couple composé du cupidon", "Couple aléatoire", "Pas de couple")
        couple_label = Label(self.window, text="Type de couple")

        # - Taux de réveil du LGB

        lgb_label = Label(self.window, text="Réveil du Loup Garou Blanc")
        self.taux_lgb = Spinbox(self.window, from_=1, to=5, command=self.toggle_lgb_taux)
        self.lgb_label1 = Label(self.window, text="Toutes les 1 nuit(s)")

        # - Taux de réveil de l'assassin

        assassin_label = Label(self.window, text="Réveil de l'assassin")
        self.taux_assassin = Spinbox(self.window, from_=1, to=5, command=self.toggle_assassin_taux)
        self.assassin_label1 = Label(self.window, text="Toutes les 1 nuit(s)")

        # - Options sorcière

        self.witch_kill_var = IntVar()
        self.witch_kill_var.set(0)
        witch_kill_time = Checkbutton(self.window, text="La sorcière ne peut pas tuer la première nuit", variable=self.witch_kill_var)
        self.witch_raise_var = IntVar()
        self.witch_raise_var.set(0)
        witch_raise_time = Checkbutton(self.window, text="La sorcière ne peut pas réanimer la première nuit", variable=self.witch_raise_var)

        # - Options joueur de flûte

        enchant_label = Label(self.window, text="Nombre de joueurs à enchanter par nuit")
        self.nb_enchant = Spinbox(self.window, from_=1, to=5, command=self.toggle_jdf_taux)
        self.nb_enchant_label = Label(self.window, text="1 joueur(s) enchanté(s) par nuit")

        # - Options ange

        self.ange_label = Label(self.window, text="L'ange peut gagner si voté avant le jour 1")
        self.ange_spin = Spinbox(self.window, from_=1, to=3, command=self.toggle_ange_taux)

        # - Compo cachée

        self.compo_var = IntVar()
        self.compo_var.set(0)
        compo_check = Checkbutton(self.window, text="Composition cachée", variable=self.compo_var)

        # - Election maire

        self.maire_var = IntVar()
        self.maire_var.set(1)
        maire = Checkbutton(self.window, text="Election d'un maire", variable=self.maire_var)

        # - END

        save = Button(self.window, text="Enregistrer et fermer", command=self.save_options)
        back = Button(self.window, text="Retour", command=self.main_menu)

        title.place(x=520, y=10)
        select_roles.place(x=50, y=100, width=300, height=40)
        self.toggle_label.place(x=150, y=150)
        toggle_button.place(x=360, y=100, width=200, height=40)
        voy_bavarde.place(x=600, y=110)
        luck_bavar_label.place(x=800, y=100)
        self.luck_bavar.place(x=800, y=125)
        couple_label.place(x=150, y=200)
        couple.place(x=50, y=230, width=300, height=40)
        lgb_label.place(x=450, y=200)
        self.taux_lgb.place(x=450, y=230)
        self.lgb_label1.place(x=470, y=260)
        assassin_label.place(x=770, y=200)
        self.taux_assassin.place(x=750, y=230)
        self.assassin_label1.place(x=770, y=260)
        witch_kill_time.place(x=50, y=340)
        witch_raise_time.place(x=50, y=370)
        enchant_label.place(x=460, y=320)
        self.nb_enchant.place(x=500, y=350)
        self.nb_enchant_label.place(x=480, y=380)
        self.ange_label.place(x=800, y=320)
        self.ange_spin.place(x=840, y=350)
        compo_check.place(x=490, y=430)
        maire.place(x=800, y=430)
        save.place(x=380, y=550, width=400, height=40)
        back.place(x=380, y=600, width=400, height=40)

    def save_options(self):
        # - GET VARIABLES

        var_good = True

        voy_bav = self.voy_bavarde_var.get()
        luck_voy = int(self.luck_bavar.get())
        couple = self.couple_var.get()
        lgb = int(self.taux_lgb.get())
        assassin = int(self.taux_assassin.get())
        witch_kill = int(self.witch_kill_var.get())
        witch_raise = int(self.witch_raise_var.get())
        nb_enchants = int(self.nb_enchant.get())
        ange = int(self.ange_spin.get())
        compo = int(self.compo_var.get())
        maire = int(self.maire_var.get())

        # - CHECK VARIABLES

        if voy_bav < 0 or voy_bav > 1 or luck_voy < 0 or luck_voy > 100:
            var_good = False
        elif lgb < 1 or lgb > 5 or assassin < 1 or assassin > 5 or witch_kill < 0 or witch_kill > 1:
            var_good = False
        elif witch_raise < 0 or witch_raise > 1 or nb_enchants < 1 or nb_enchants > 5:
            var_good = False
        elif ange < 1 or ange > 3 or compo < 0 or compo > 1 or maire != 0 and maire != 1:
            var_good = False

        if not var_good:
            showerror("Loup Garou", "Les paramètres entrés sont incorrects !")
            self.options_menu()
        else:

        # - DEL GLOBAL VARIABLES

            del self.voy_bavarde_var
            del self.select_roles_var
            del self.toggle_label
            del self.luck_bavar
            del self.couple_var
            del self.taux_lgb
            del self.lgb_label1
            del self.taux_assassin
            del self.assassin_label1
            del self.witch_kill_var
            del self.witch_raise_var
            del self.nb_enchant
            del self.nb_enchant_label
            del self.ange_label
            del self.ange_spin
            del self.compo_var
            del self.maire_var

        # - SET

            if voy_bav == 1:
                self.game_options["VoyanteBavarde"] = True
            else:
                self.game_options["VoyanteBavarde"] = False
            self.game_options["VoyanteBavardePer"] = luck_voy
            self.game_options["Couple"] = couple
            self.game_options["Taux LGB"] = lgb
            self.game_options["TauxAssassin"] = assassin
            if witch_kill == 1:
                self.game_options["SorcièreNoKill"] = True
            else:
                self.game_options["SorcièreNoKill"] = False
            if witch_raise == 1:
                self.game_options["SorcièreNoRaise"] = True
            else:
                self.game_options["SorcièreNoRaise"] = False
            self.game_options["JDFenchant"] = nb_enchants
            self.game_options["WinAnge"] = ange
            if compo == 1:
                self.game_options["CompoCachée"] = True
            else:
                self.game_options["CompoCachée"] = False
            if maire == 1:
                self.game_options["Election"] = True
            else:
                self.game_options["Election"] = False

            showinfo("Loup Garou", "Les paramètres ont bien été sauvegardés !")
            self.main_menu()

    def toggle_ange_taux(self):
        self.ange_label.config(text="L'ange peut gagner si voté avant le jour " + str(self.ange_spin.get()))

    def toggle_jdf_taux(self):
        self.nb_enchant_label.config(text=str(self.nb_enchant.get()) + " joueur(s) enchanté(s) par nuit")

    def toggle_assassin_taux(self):
        self.assassin_label1.config(text="Toutes les " + str(self.taux_assassin.get()) + " nuit(s)")

    def toggle_lgb_taux(self):
        self.lgb_label1.config(text="Toutes les " + str(self.taux_lgb.get()) + " nuit(s)")

    def toggle_role(self):
        global roles

        if roles.get(self.select_roles_var.get()):
            self.toggle_label.config(text="Désactivé", fg="red")
            roles[self.select_roles_var.get()] = False
        else:
            self.toggle_label.config(text="Activé", fg="green")
            roles[self.select_roles_var.get()] = True

    def toggle_label_func(self, event):
        global roles

        if roles.get(self.select_roles_var.get()):
            self.toggle_label.config(text="Activé", fg="green")
        else:
            self.toggle_label.config(text="Désactivé", fg="red")


Game()